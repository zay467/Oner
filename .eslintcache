[{"C:\\Work\\oner\\src\\index.js":"1","C:\\Work\\oner\\src\\App.js":"2","C:\\Work\\oner\\src\\reportWebVitals.js":"3","C:\\Work\\oner\\src\\Containers\\login.js":"4","C:\\Work\\oner\\src\\Components\\navbar.js":"5"},{"size":801,"mtime":1611172845201,"results":"6","hashOfConfig":"7"},{"size":857,"mtime":1611288052342,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":1658,"mtime":1611286967175,"results":"10","hashOfConfig":"7"},{"size":5072,"mtime":1611287335058,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"gb4vmz",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Work\\oner\\src\\index.js",[],["24","25"],"C:\\Work\\oner\\src\\App.js",["26","27","28"],"C:\\Work\\oner\\src\\reportWebVitals.js",[],"C:\\Work\\oner\\src\\Containers\\login.js",[],"C:\\Work\\oner\\src\\Components\\navbar.js",["29","30"],"import {\r\n  AppBar,\r\n  Avatar,\r\n  Button,\r\n  ClickAwayListener,\r\n  Divider,\r\n  Drawer,\r\n  Grow,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  MenuItem,\r\n  MenuList,\r\n  Paper,\r\n  Popper,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Settings } from \"@material-ui/icons\";\r\nimport oner from \"../images/oner.png\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  logo: {\r\n    marginLeft: \"5%\",\r\n    height: 52,\r\n    padding: 3,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: \"auto\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  toggleMenuList: {\r\n    width: 325,\r\n    marginTop: 5,\r\n  },\r\n\r\n  listItemRoot: {\r\n    \"&$selected\": {\r\n      backgroundColor: theme.palette.secondary.main,\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.secondary.light,\r\n      },\r\n    },\r\n  },\r\n  selected: {},\r\n}));\r\nconst NavBar = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\" color=\"secondary\" className={classes.appBar}>\r\n        <Toolbar variant=\"dense\">\r\n          <Avatar alt=\"Oner\" src={oner} className={classes.logo} />\r\n          <Typography className={classes.title}></Typography>\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            color=\"inherit\"\r\n            ref={anchorRef}\r\n            aria-controls={open ? \"menu-list-grow\" : \"menu-appbar\"}\r\n            aria-haspopup=\"true\"\r\n            onClick={handleToggle}\r\n          >\r\n            <Settings />\r\n          </IconButton>\r\n          <Popper\r\n            open={open}\r\n            anchorEl={anchorRef.current}\r\n            role={undefined}\r\n            transition\r\n            disablePortal\r\n          >\r\n            {({ TransitionProps, placement }) => (\r\n              <Grow\r\n                {...TransitionProps}\r\n                style={{\r\n                  transformOrigin:\r\n                    placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n                }}\r\n              >\r\n                <Paper>\r\n                  <ClickAwayListener onClickAway={handleClose}>\r\n                    <MenuList\r\n                      autoFocusItem={open}\r\n                      id=\"menu-list-grow\"\r\n                      onKeyDown={handleListKeyDown}\r\n                      className={classes.toggleMenuList}\r\n                    >\r\n                      <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                      <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                      <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n                    </MenuList>\r\n                  </ClickAwayListener>\r\n                </Paper>\r\n              </Grow>\r\n            )}\r\n          </Popper>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <div className={classes.drawerContainer}>\r\n          <List>\r\n            <ListItem>\r\n              <ListItemText primary=\"Menu\" />\r\n            </ListItem>\r\n            {[\r\n              \"Inbox\",\r\n              \"Starred\",\r\n              \"Send email\",\r\n              \"Drafts\",\r\n              \"All mail\",\r\n              \"Trash\",\r\n              \"Spam\",\r\n              \"Inbox\",\r\n            ].map((text, index) => (\r\n              <ListItem\r\n                button\r\n                key={text}\r\n                classes={{\r\n                  selected: classes.selected,\r\n                  root: classes.listItemRoot,\r\n                }}\r\n              >\r\n                <ListItemIcon>\r\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":8,"nodeType":"37","messageId":"38","endLine":1,"endColumn":12},{"ruleId":"35","severity":1,"message":"39","line":5,"column":10,"nodeType":"37","messageId":"38","endLine":5,"endColumn":13},{"ruleId":"35","severity":1,"message":"40","line":6,"column":8,"nodeType":"37","messageId":"38","endLine":6,"endColumn":14},{"ruleId":"35","severity":1,"message":"41","line":4,"column":3,"nodeType":"37","messageId":"38","endLine":4,"endColumn":9},{"ruleId":"35","severity":1,"message":"42","line":6,"column":3,"nodeType":"37","messageId":"38","endLine":6,"endColumn":10},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'red' is defined but never used.","'NavBar' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","no-global-assign","no-unsafe-negation"]